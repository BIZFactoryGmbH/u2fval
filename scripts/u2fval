#!/usr/bin/python
#    Copyright (C) 2014  Yubico AB
#
#    This program is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, either version 3 of the License, or
#    (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program.  If not, see <http://www.gnu.org/licenses/>.


from u2fserver.model import Client
import os
import argparse


def run_parser(parser):
    parser.add_argument('-i', '--interface', nargs='?',
                        default='localhost', help='network interface to '
                        'bind to')
    parser.add_argument('-p', '--port', nargs='?', type=int, default=8080,
                        help='TCP port to bind to')


def client_parser(parser):
    client_subparsers = parser.add_subparsers(dest='action', help='subcommand')
    create_parser = client_subparsers.add_parser('create',
                                                 help='create a client')
    create_parser.add_argument('name', help='the name of the client')

    delete_parser = client_subparsers.add_parser('delete',
                                                 help='delete a client')
    delete_parser.add_argument('name', help='the name of the client')


def arg_parser():
    parser = argparse.ArgumentParser(
        description="Yubico U2F Validation Server",
        add_help=True
    )
    parser.add_argument('-c', '--config', help='specify an alternate '
                        'configuration file to use')
    subparsers = parser.add_subparsers(dest='command',
                                       help='available commands')

    client_parser(subparsers.add_parser('client', help='manage clients'))
    run_parser(subparsers.add_parser('run', help='run the server'))

    return parser


def handle_client(settings, args):
    print "hadle_client"


def handle_run(settings, args):
    print "handle_run"


def handle_args(settings, args):
    cmd = args.command
    if cmd == 'client':
        handle_client(settings, args)
    elif cmd == 'run':
        handle_run(settings, args)


def main():
    args = arg_parser().parse_args()

    if args.config:
        os.environ['U2FVAL_SETTINGS'] = args.config
    from u2fserver.config import settings

    handle_args(settings, args)


if __name__ == '__main__':
    main()
